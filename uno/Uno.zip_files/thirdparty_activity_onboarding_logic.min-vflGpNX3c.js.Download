define(["require","exports","tslib","react","external/lodash","modules/core/i18n","modules/clean/api_v2/default_user_client","modules/clean/react/file_activity_stream/thirdparty_activity_onboarding_card","modules/clean/react/file_sidebar/store/file_activity/types","modules/clean/react_format","modules/clean/logging/telemetry","modules/clean/logging/hive/schemas/web-ecosystem_integration_events","modules/clean/react/file_activity_stream/utils"],function(e,t,n,r,o,i,a,s,c,u,d,l,_){"use strict";function g(e){return n.__awaiter(this,void 0,void 0,function(){var t;return n.__generator(this,function(n){switch(n.label){case 0:return t=new a.DefaultUserApiV2Client(e),[4,t.ns("profile_services").rpc("list_services",void 0,{})];case 1:return[2,n.sent()]}})})}function m(e){return n.__awaiter(this,void 0,Promise,function(){var t,r;return n.__generator(this,function(n){switch(n.label){case 0:return t=new a.DefaultUserApiV2Client(e),[4,t.ns("integrations").rpc("get_user_settings",void 0,{})];case 1:return r=n.sent(),[2,o.some(r.dismissed_prompts,[".tag","thirdparty_activity_onboarding"])]}})})}function p(e,t,r,i){return n.__awaiter(this,void 0,void 0,function(){var a,s,u,_,g,m;return n.__generator(this,function(n){switch(n.label){case 0:return a=o.filter(e,function(e){return"slack_link_share"===e.type}),s=o.filter(e,function(e){return"zoom_screen_share"===e.type}),u=new d.HiveLogger,a.length>0&&(_=o.some(a,["slack_conversation_type",c.SlackConversationType.redacted_viewer_not_slack_connected]))?(u.log(new l.EcosystemIntegrationLoggingTableRow({event_name:l.EventName.onboardingCardViewed,extra:{user_onboarding:"false"}})),[2,!0]):s.length>0&&(g=o.some(s,["zoom_screen_share_type",c.ZoomScreenShareType.redacted_viewer_not_zoom_connected]))?(u.log(new l.EcosystemIntegrationLoggingTableRow({event_name:l.EventName.onboardingCardViewed,extra:{user_onboarding:"false"}})),[2,!0]):a.length>0&&s.length>0?[2,!1]:[4,i(t)];case 1:return n.sent()?[4,r(t)]:[2,!1];case 2:return m=n.sent(),m||u.log(new l.EcosystemIntegrationLoggingTableRow({event_name:l.EventName.onboardingCardViewed,extra:{user_onboarding:"true"}})),[2,!m]}})})}function v(e){return n.__awaiter(this,void 0,void 0,function(){var t;return n.__generator(this,function(n){switch(n.label){case 0:return[4,g(e)];case 1:return t=n.sent(),[2,f(t)]}})})}function f(e){if(void 0===e)return!1;var t=h("slack_dropbox",e),n=h("zoom",e);return t||n}function h(e,t){var n=o.find(t.services,function(t){return t.service_type[".tag"]===e});return void 0!==n&&("enabled"===n.service_availability[".tag"]&&"is_connected"!==n.connection_state[".tag"])}Object.defineProperty(t,"__esModule",{value:!0}),r=n.__importDefault(r),o=n.__importStar(o),d=n.__importStar(d);var w=(function(e){function t(t){var n=e.call(this,t)||this;return n.mounted=!1,n.getMessage=function(){var e={strong:r.default.createElement("strong",null)};return u.reactFormat(i._("<strong>Connect apps</strong> to Dropbox and see whatâ€™s happening with your file in other apps."),e)},n.onConnectClick=function(){(new d.HiveLogger).log(new l.EcosystemIntegrationLoggingTableRow({event_name:l.EventName.onboardingCardConnect})),_.thirdPartyActivityShowAppStoreModal(n.props.user)},n.handleDismiss=function(){n.mounted=!0,n.dismissCard().then(function(){if(n.mounted){(new d.HiveLogger).log(new l.EcosystemIntegrationLoggingTableRow({event_name:l.EventName.onboardingCardDismissed})),n.setState({mountCard:!1})}})},n.state={mountCard:!1},n}return n.__extends(t,e),t.prototype.render=function(){return this.state.mountCard?r.default.createElement(s.OnboardingCard,{text:this.getMessage(),connectAppsButtonText:i._("Connect apps"),dismissButtonText:i._("Not now"),onConnect:this.onConnectClick,onDismiss:this.handleDismiss}):null},t.prototype.dismissCard=function(){return n.__awaiter(this,void 0,void 0,function(){var e;return n.__generator(this,function(t){switch(t.label){case 0:return e=new a.DefaultUserApiV2Client(this.props.user),[4,e.ns("integrations").rpc("add_dismiss_prompts",{prompts:[{".tag":"thirdparty_activity_onboarding"}]},{})];case 1:return[2,t.sent()]}})})},t.prototype.componentDidMount=function(){var e=this;this.mounted=!0,p(this.props.activities,this.props.user,m,v).then(function(t){e.mounted&&e.setState({mountCard:t})})},t.prototype.componentWillUnmount=function(){this.mounted=!1},t})(r.default.Component);t.ThirdpartyActivityOnboardingComponent=w;t.shouldRenderCard=p,t.userHasNotConnectedToAllApps=f});
//# sourceMappingURL=thirdparty_activity_onboarding_logic.min.js-vflw62z7M.map